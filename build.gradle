plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.sonarqube" version "4.2.1.3168"
}

group = 'org.dargor'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = 'VERSION_11'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.5")
}

dependencies {

    implementation(
            'org.springframework.boot:spring-boot-starter-webflux',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server',
            'org.springframework.cloud:spring-cloud-starter-bootstrap',
            'org.springframework.cloud:spring-cloud-config-server',
            'org.springframework.cloud:spring-cloud-starter-vault-config',
            'org.springframework.cloud:spring-cloud-starter-config',
            'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.8.RELEASE',
    )

    productionRuntimeClasspath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'

    compileOnly(
            'org.springframework.cloud:spring-cloud-starter-sleuth',
            'org.projectlombok:lombok'

    )

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}


apply plugin: 'io.spring.dependency-management'
apply plugin: "org.sonarqube"


jar {
    manifest {
        attributes 'PromPathConfigServerApplication': 'org.dargor.configserver.PromPathConfigServerApplication'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
